
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.JTextField;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author User
 */
public class karatavas2 extends javax.swing.JFrame {

    boolean irVinnejis = false;
    ArrayList<String> burtuSaraksts = new ArrayList<String>();
    ArrayList<String> minamaisBurtuSaraksts = new ArrayList<String>();
    String pareizaAtbilde = "";
    String ierakstitaisBurts = "";
    int reizesMeginats = 0;

    /**
     * Creates new form karatavas2
     */
    public karatavas2() {
        initComponents();
        saktSpeli();
        System.out.println(pareizaAtbilde);
        jTextField1.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Sākt Spēli");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton1)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(104, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        jButton1.setText("Minēt");
        jTextField1.setVisible(true);

        if (jTextField1.getText().matches("([A-Za-z])")) {
            reizesMeginats++;

            if (reizesMeginats < 7 && reizesMeginats != 0) {
                spele();
                vaiVinnejis();
            } else if (reizesMeginats == 7 && irVinnejis == false) {
                jLabel1.setText("Game Over. Vards Bija " + pareizaAtbilde);
                jButton1.setText("Sākt Speli");
                irVinnejis = false;
            } else {
                reizesMeginats = 0;
                burtuSaraksts = new ArrayList<String>();
                minamaisBurtuSaraksts = new ArrayList<String>();
                jTextField1.setVisible(false);

                saktSpeli();
            }

            System.out.println("reizes meginats: " + reizesMeginats);
            System.out.println("vai ir vinnejis: " + irVinnejis);
            System.out.println("ierakstītais burts " + ierakstitaisBurts);
            System.out.println("pareiza atbilde ir " + pareizaAtbilde);
            System.out.println("burtu saraksts ir " + burtuSaraksts);
            System.out.println("minamais burtu saraksts ir" + minamaisBurtuSaraksts);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void spele() {

//        
//        for (String burts : burtuSaraksts) {
//            burts = "*";
//            minamaisBurtuSaraksts.add(burts);
//        }
//        jTextField1.addKeyListener(new KeyAdapter() {
//            public void keyReleased(KeyEvent e) {
//                JTextField textField = (JTextField) e.getSource();
//                if (e.getKeyCode() == KeyEvent.VK_ENTER && textField.getText().toUpperCase().matches("([A-Za-z])")) {
//                    ierakstitaisBurts = textField.getText().toUpperCase();
//                }
//            }
//        });
//
//        if (jTextField1.getText().toUpperCase().matches("([A-Za-z])")) {
//            ierakstitaisBurts = jTextField1.getText().toUpperCase();
//        }
//        while (jTextField1.getText().toUpperCase().matches("([A-Za-z])")) {
//            ierakstitaisBurts = jTextField1.getText().toUpperCase();
//        }
//        
        ierakstitaisBurts = jTextField1.getText().toUpperCase();

        jTextField1.setText("");

        int kursBurts = 0;
        for (String burts : burtuSaraksts) {
            if (burts.equals(ierakstitaisBurts)) {
                minamaisBurtuSaraksts.set(kursBurts, burts);
            }
            kursBurts++;
        }

        StringBuilder minamaisVards = new StringBuilder();
        for (String burts : minamaisBurtuSaraksts) {
            minamaisVards.append(burts);
        }

        jLabel1.setText(minamaisVards.toString());
    }

    private void saktSpeli() {

        ArrayList<String> burtuSarakstsLocal = new ArrayList<String>(Arrays.asList(vardnica().split("")));

        for (String burts : burtuSarakstsLocal) {
            burtuSaraksts.add(burts);
            burts = "*";
            minamaisBurtuSaraksts.add(burts);
        }

        StringBuilder vards = new StringBuilder();
        for (String burts : burtuSarakstsLocal) {
            burts = "*";
            vards.append(burts);
        }

        StringBuilder pareizaAtbildeLocal = new StringBuilder();
        for (String burts : burtuSarakstsLocal) {
            pareizaAtbildeLocal.append(burts);
        }

        pareizaAtbilde = pareizaAtbildeLocal.toString();
        jLabel1.setText(vards.toString());
    }

    private boolean vaiVinnejis() {

        while (jLabel1.getText().contains("*")) {
            return irVinnejis = false;
        }
        return irVinnejis = true;
    }

    private String vardnica() {
        ArrayList<String> vardi = new ArrayList<String>();
        vardi.add("taurenis");
        vardi.add("mašīna");
        vardi.add("ābece");
        vardi.add("kafija");
        vardi.add("burtnīca");
        vardi.add("paklājs");
        vardi.add("dzelzsceļš");
        vardi.add("šūpoles");
        vardi.add("vārdnīca");
        vardi.add("asdffdsa");

        int randomNum = (int) (Math.random() * vardi.size());

        String vards = vardi.get(randomNum).toUpperCase();

        return vards;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(karatavas2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(karatavas2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(karatavas2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(karatavas2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new karatavas2().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

}
